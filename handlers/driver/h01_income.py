from aiogram import Router, F
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from keyboards.reply import income_menu_kb, back_button_kb

router = Router()


class IncomeStates(StatesGroup):
    choosing_type = State()
    waiting_for_amount = State()
    waiting_for_comment = State()


@router.message(F.text == '–î–æ—Ö–æ–¥')
async def show_income_menu(message: Message, state: FSMContext):
    """
        –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–æ–≤.
    """

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ—Ö–æ–¥–∞', reply_markup=income_menu_kb())
    await state.set_state(IncomeStates.choosing_type)


@router.message(IncomeStates.choosing_type, F.text.in_(['–û–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–∫–∞–∑', '–î–æ–ø–ª–∞—Ç–∞ –∑–∞ –∑–∞–∫–∞–∑']))
async def ask_income_amount(message: Message, state: FSMContext):
    """
        –ó–∞–ø—Ä–æ—Å —Å—É–º–º—ã –¥–æ—Ö–æ–¥–∞
    """

    await state.update_data(income_type=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–ª–æ–º\n–ü—Ä–∏–º–µ—Ä: `300.00`', parse_mode='Markdown', reply_markup=back_button_kb())
    await state.set_state(IncomeStates.waiting_for_amount)


@router.message(IncomeStates.waiting_for_amount)
async def ask_income_comment(message: Message, state: FSMContext):
    """
        –ó–∞–ø—Ä–æ—Å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏—è
    """

    if message.text == '–ù–∞–∑–∞–¥ üîô':
        await state.set_state(IncomeStates.choosing_type)
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ—Ö–æ–¥–∞', reply_markup=income_menu_kb())

        return

    try:
        amount = float(message.text.replace(',', '.'))

    except ValueError:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.')
        return

    await state.update_data(amount=amount)
    await message.answer('–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π\n–ü—Ä–∏–º–µ—Ä:\n`–ê–¥—Ä–µ—Å –∑–∞–∫–∞–∑–∞: –ü—Ä–æ—Å–ø. –ü–æ–±–µ–¥—ã 01`', parse_mode='Markdown', reply_markup=back_button_kb())
    await state.set_state(IncomeStates.waiting_for_comment)


@router.message(F.text == '–ù–∞–∑–∞–¥ üîô')
async def back_one_step(message: Message, state: FSMContext):
    """
        –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –¥–æ—Ö–æ–¥–∞
    """

    await state.clear()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ—Ö–æ–¥–∞', reply_markup=income_menu_kb())
